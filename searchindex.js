Search.setIndex({"alltitles": {"0.3.7 - 15/06/2024": [[0, "id2"]], "0.4.0 - 16/06/2024": [[0, "id1"]], "Advanced Input/Output": [[6, "advanced-input-output"]], "Advanced Pipelines Architectures": [[6, "advanced-pipelines-architectures"]], "Basics": [[6, "basics"]], "Batch processors": [[6, "batch-processors"]], "Changelog": [[0, "changelog"]], "Command Line Interface": [[1, "command-line-interface"]], "Contents:": [[3, null]], "Data Loading Elements": [[5, "data-loading-elements"]], "Datasets": [[6, "datasets"]], "Dealing with large datasets": [[2, "dealing-with-large-datasets"]], "Disable any form of caching": [[2, "disable-any-form-of-caching"]], "Documentation Index": [[3, "documentation-index"]], "Enable streaming for the output\u2019s storage": [[2, "enable-streaming-for-the-output-s-storage"]], "External API": [[5, "external-api"]], "Extraction": [[6, "extraction"]], "Extraction Graph": [[5, "extraction-graph"]], "Extraction options": [[6, "extraction-options"]], "Extractor": [[5, "extractor"]], "How-To": [[2, "how-to"]], "Implementing your own DatasetLoader and Samples": [[6, "implementing-your-own-datasetloader-and-samples"]], "Installation": [[3, "installation"]], "Internal API": [[5, "internal-api"]], "Make data loading as lazy as possible": [[2, "make-data-loading-as-lazy-as-possible"]], "Picking the right storage format": [[2, "picking-the-right-storage-format"]], "Pipeline": [[5, "pipeline"]], "Pipelines": [[6, "pipelines"]], "Processors": [[5, "processors"], [6, "processors"]], "Processors and Pipeline Elements": [[5, "processors-and-pipeline-elements"]], "Quickstart": [[4, "quickstart"]], "Reference": [[5, "reference"]], "Running the extraction and saving the features": [[4, "running-the-extraction-and-saving-the-features"]], "Sample Processors": [[6, "sample-processors"]], "Setting up a Dataset": [[4, "setting-up-a-dataset"]], "Setting up pipelines": [[4, "setting-up-pipelines"]], "Sharing your extraction pipelines": [[2, "sharing-your-extraction-pipelines"]], "Storage": [[5, "storage"]], "Storage options": [[6, "storage-options"]], "Use sample-wise extraction order": [[2, "use-sample-wise-extraction-order"]], "User Guide": [[6, "user-guide"]], "Using Python primitives as a Dataset": [[6, "using-python-primitives-as-a-dataset"]], "Using functions and lambdas as processors": [[6, "using-functions-and-lambdas-as-processors"]], "Welcome to adfluo\u2019s documentation!": [[3, "welcome-to-adfluo-s-documentation"]]}, "docnames": ["changelog", "cli", "how_tos", "index", "quickstart", "reference", "user_guide"], "envversion": {"sphinx": 61, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2}, "filenames": ["changelog.rst", "cli.rst", "how_tos.rst", "index.rst", "quickstart.rst", "reference.rst", "user_guide.rst"], "indexentries": {"__getitem__() (adfluo.sample method)": [[5, "adfluo.Sample.__getitem__", false]], "add_extraction() (adfluo.extractor method)": [[5, "adfluo.Extractor.add_extraction", false]], "basestorage (class in adfluo.storage)": [[5, "adfluo.storage.BaseStorage", false]], "check_samples() (adfluo.storage.csvstorage method)": [[5, "adfluo.storage.CSVStorage.check_samples", false]], "check_samples() (adfluo.storage.dataframestorage method)": [[5, "adfluo.storage.DataFrameStorage.check_samples", false]], "check_samples() (adfluo.storage.jsonstorage method)": [[5, "adfluo.storage.JSONStorage.check_samples", false]], "check_samples() (adfluo.storage.picklestorage method)": [[5, "adfluo.storage.PickleStorage.check_samples", false]], "csvstorage (class in adfluo.storage)": [[5, "adfluo.storage.CSVStorage", false]], "dataframestorage (class in adfluo.storage)": [[5, "adfluo.storage.DataFrameStorage", false]], "datasetloader (class in adfluo)": [[5, "adfluo.DatasetLoader", false]], "extract_aggregations() (adfluo.extractor method)": [[5, "adfluo.Extractor.extract_aggregations", false]], "extract_to_csv() (adfluo.extractor method)": [[5, "adfluo.Extractor.extract_to_csv", false]], "extract_to_df() (adfluo.extractor method)": [[5, "adfluo.Extractor.extract_to_df", false]], "extract_to_dict() (adfluo.extractor method)": [[5, "adfluo.Extractor.extract_to_dict", false]], "extract_to_hdf5() (adfluo.extractor method)": [[5, "adfluo.Extractor.extract_to_hdf5", false]], "extract_to_json() (adfluo.extractor method)": [[5, "adfluo.Extractor.extract_to_json", false]], "extract_to_pickle() (adfluo.extractor method)": [[5, "adfluo.Extractor.extract_to_pickle", false]], "extract_to_pickle_files() (adfluo.extractor method)": [[5, "adfluo.Extractor.extract_to_pickle_files", false]], "extractor (class in adfluo)": [[5, "adfluo.Extractor", false]], "f (in module adfluo)": [[5, "adfluo.F", false]], "feat (in module adfluo)": [[5, "adfluo.Feat", false]], "flatten_dict() (adfluo.storage.csvstorage method)": [[5, "adfluo.storage.CSVStorage.flatten_dict", false]], "flatten_dict() (adfluo.storage.dataframestorage method)": [[5, "adfluo.storage.DataFrameStorage.flatten_dict", false]], "flatten_dict() (adfluo.storage.jsonstorage method)": [[5, "adfluo.storage.JSONStorage.flatten_dict", false]], "flatten_dict() (adfluo.storage.picklestorage method)": [[5, "adfluo.storage.PickleStorage.flatten_dict", false]], "flatten_tuple() (adfluo.storage.csvstorage static method)": [[5, "adfluo.storage.CSVStorage.flatten_tuple", false]], "flatten_tuple() (adfluo.storage.dataframestorage static method)": [[5, "adfluo.storage.DataFrameStorage.flatten_tuple", false]], "flatten_tuple() (adfluo.storage.jsonstorage static method)": [[5, "adfluo.storage.JSONStorage.flatten_tuple", false]], "flatten_tuple() (adfluo.storage.picklestorage static method)": [[5, "adfluo.storage.PickleStorage.flatten_tuple", false]], "get_data() (adfluo.storage.csvstorage method)": [[5, "adfluo.storage.CSVStorage.get_data", false]], "get_data() (adfluo.storage.dataframestorage method)": [[5, "adfluo.storage.DataFrameStorage.get_data", false]], "get_data() (adfluo.storage.jsonstorage method)": [[5, "adfluo.storage.JSONStorage.get_data", false]], "get_data() (adfluo.storage.picklestorage method)": [[5, "adfluo.storage.PickleStorage.get_data", false]], "get_progress_iterator() (adfluo.extractor method)": [[5, "adfluo.Extractor.get_progress_iterator", false]], "hparams (adfluo.extractor property)": [[5, "adfluo.Extractor.hparams", false]], "input (in module adfluo)": [[5, "adfluo.Input", false]], "jsonstorage (class in adfluo.storage)": [[5, "adfluo.storage.JSONStorage", false]], "picklestorage (class in adfluo.storage)": [[5, "adfluo.storage.PickleStorage", false]], "post_init() (adfluo.processors.processorbase method)": [[5, "adfluo.processors.ProcessorBase.post_init", false]], "process() (adfluo.sampleprocessor method)": [[5, "adfluo.SampleProcessor.process", false]], "processorbase (class in adfluo.processors)": [[5, "adfluo.processors.ProcessorBase", false]], "sample (class in adfluo)": [[5, "adfluo.Sample", false]], "sampleprocessor (class in adfluo)": [[5, "adfluo.SampleProcessor", false]], "set_extraction_policy() (adfluo.extractor method)": [[5, "adfluo.Extractor.set_extraction_policy", false]], "set_hparams() (adfluo.extractor method)": [[5, "adfluo.Extractor.set_hparams", false]], "store_feat() (adfluo.storage.basestorage method)": [[5, "adfluo.storage.BaseStorage.store_feat", false]], "store_feat() (adfluo.storage.csvstorage method)": [[5, "adfluo.storage.CSVStorage.store_feat", false]], "store_feat() (adfluo.storage.dataframestorage method)": [[5, "adfluo.storage.DataFrameStorage.store_feat", false]], "store_feat() (adfluo.storage.jsonstorage method)": [[5, "adfluo.storage.JSONStorage.store_feat", false]], "store_feat() (adfluo.storage.picklestorage method)": [[5, "adfluo.storage.PickleStorage.store_feat", false]], "store_sample() (adfluo.storage.basestorage method)": [[5, "adfluo.storage.BaseStorage.store_sample", false]], "store_sample() (adfluo.storage.csvstorage method)": [[5, "adfluo.storage.CSVStorage.store_sample", false]], "store_sample() (adfluo.storage.dataframestorage method)": [[5, "adfluo.storage.DataFrameStorage.store_sample", false]], "store_sample() (adfluo.storage.jsonstorage method)": [[5, "adfluo.storage.JSONStorage.store_sample", false]], "store_sample() (adfluo.storage.picklestorage method)": [[5, "adfluo.storage.PickleStorage.store_sample", false]], "write() (adfluo.storage.csvstorage method)": [[5, "adfluo.storage.CSVStorage.write", false]], "write() (adfluo.storage.jsonstorage method)": [[5, "adfluo.storage.JSONStorage.write", false]], "write() (adfluo.storage.picklestorage method)": [[5, "adfluo.storage.PickleStorage.write", false]]}, "objects": {"adfluo": [[5, 0, 1, "", "DatasetLoader"], [5, 0, 1, "", "Extractor"], [5, 3, 1, "", "F"], [5, 3, 1, "", "Feat"], [5, 3, 1, "", "Input"], [5, 0, 1, "", "Sample"], [5, 0, 1, "", "SampleProcessor"]], "adfluo.Extractor": [[5, 1, 1, "", "add_extraction"], [5, 1, 1, "", "extract_aggregations"], [5, 1, 1, "", "extract_to_csv"], [5, 1, 1, "", "extract_to_df"], [5, 1, 1, "", "extract_to_dict"], [5, 1, 1, "", "extract_to_hdf5"], [5, 1, 1, "", "extract_to_json"], [5, 1, 1, "", "extract_to_pickle"], [5, 1, 1, "", "extract_to_pickle_files"], [5, 1, 1, "", "get_progress_iterator"], [5, 2, 1, "", "hparams"], [5, 1, 1, "", "set_extraction_policy"], [5, 1, 1, "", "set_hparams"]], "adfluo.Sample": [[5, 1, 1, "", "__getitem__"]], "adfluo.SampleProcessor": [[5, 1, 1, "", "process"]], "adfluo.processors": [[5, 0, 1, "", "ProcessorBase"]], "adfluo.processors.ProcessorBase": [[5, 1, 1, "", "post_init"]], "adfluo.storage": [[5, 0, 1, "", "BaseStorage"], [5, 0, 1, "", "CSVStorage"], [5, 0, 1, "", "DataFrameStorage"], [5, 0, 1, "", "JSONStorage"], [5, 0, 1, "", "PickleStorage"]], "adfluo.storage.BaseStorage": [[5, 1, 1, "", "store_feat"], [5, 1, 1, "", "store_sample"]], "adfluo.storage.CSVStorage": [[5, 1, 1, "", "check_samples"], [5, 1, 1, "", "flatten_dict"], [5, 1, 1, "", "flatten_tuple"], [5, 1, 1, "", "get_data"], [5, 1, 1, "", "store_feat"], [5, 1, 1, "", "store_sample"], [5, 1, 1, "", "write"]], "adfluo.storage.DataFrameStorage": [[5, 1, 1, "", "check_samples"], [5, 1, 1, "", "flatten_dict"], [5, 1, 1, "", "flatten_tuple"], [5, 1, 1, "", "get_data"], [5, 1, 1, "", "store_feat"], [5, 1, 1, "", "store_sample"]], "adfluo.storage.JSONStorage": [[5, 1, 1, "", "check_samples"], [5, 1, 1, "", "flatten_dict"], [5, 1, 1, "", "flatten_tuple"], [5, 1, 1, "", "get_data"], [5, 1, 1, "", "store_feat"], [5, 1, 1, "", "store_sample"], [5, 1, 1, "", "write"]], "adfluo.storage.PickleStorage": [[5, 1, 1, "", "check_samples"], [5, 1, 1, "", "flatten_dict"], [5, 1, 1, "", "flatten_tuple"], [5, 1, 1, "", "get_data"], [5, 1, 1, "", "store_feat"], [5, 1, 1, "", "store_sample"], [5, 1, 1, "", "write"]]}, "objnames": {"0": ["py", "class", "Python class"], "1": ["py", "method", "Python method"], "2": ["py", "property", "Python property"], "3": ["py", "attribute", "Python attribute"]}, "objtypes": {"0": "py:class", "1": "py:method", "2": "py:property", "3": "py:attribute"}, "terms": {"": [1, 4, 6], "0": [3, 4], "001": 4, "002": 4, "003": 4, "004": 4, "032": 4, "06": 3, "1": 2, "10": 0, "12": 0, "1209": 4, "15": 3, "1543": 4, "16": 3, "2": 4, "2024": 3, "2232": 4, "2508": 4, "2h": 2, "3": [3, 4], "343": 4, "3976": 4, "4": [3, 4], "5": 4, "6": 4, "632": 4, "7": [3, 4], "8232": 4, "By": 2, "For": [4, 6], "If": 2, "In": [1, 2], "It": [2, 4], "One": 2, "That": 4, "The": 6, "Their": 6, "Then": 4, "There": 6, "To": [3, 4, 5], "_": 5, "__getitem__": [2, 5, 6], "__init__": [2, 4, 5, 6], "__iter__": 4, "__iter___": 6, "__len__": [4, 6], "abl": 4, "about": 6, "abov": 2, "abstract": [5, 6], "access": 6, "actual": [2, 5], "ad": 0, "add_extract": [4, 5], "adfluo": [1, 2, 4, 5, 6], "advic": 2, "afluo": [2, 4], "aforement": 2, "after": 5, "again": 4, "aggreg": 5, "aim": 2, "ain": 4, "alia": 5, "all": [2, 4, 6], "also": 2, "amount": 2, "an": [2, 4, 6], "ani": [4, 5, 6], "anoth": [2, 4], "api": 3, "ar": [2, 4, 6], "arbitrari": 4, "arg": 5, "argument": 2, "arrai": 4, "ask": 2, "attribut": 5, "audio": [2, 4, 6], "audio_arrai": [4, 6], "audio_data": 4, "audio_dur": 4, "audio_path": [2, 6], "averag": 4, "average_energi": 4, "avg_energi": 4, "avoid": 4, "backend": 5, "bag": 4, "base": 5, "basestorag": 5, "batchprocessor": 2, "being": 5, "best": 2, "big": 4, "binaryio": 5, "bool": 5, "both": [2, 6], "bound": 4, "build": 4, "bunch": 4, "can": [2, 3, 4, 6], "caption": 5, "care": [2, 5], "case": 4, "changelog": 3, "check_sampl": 5, "child": 5, "choic": 4, "chosen": 4, "class": [2, 4, 5, 6], "cleaner": 2, "cli": 1, "code": 2, "come": 4, "command": 3, "common": 2, "compat": 0, "complet": 0, "compos": 0, "comput": [2, 4], "consequ": 2, "contain": [2, 6], "correspond": [4, 6], "costli": 2, "could": 4, "count": 4, "count_word": 4, "creat": 4, "csv": 4, "csv_dialect": 5, "csvstorag": 5, "d": [4, 6], "data": [4, 6], "data_nam": [2, 4, 5, 6], "data_path": [2, 4], "databas": 5, "datafram": [4, 5], "dataframestorag": 5, "dataload": 6, "dataset": [3, 5], "datasetload": [4, 5], "deal": 3, "def": [2, 4, 6], "default": [0, 2], "defin": [2, 4], "definit": 2, "depend": 5, "describ": 4, "dialect": 5, "dict": [0, 4, 5], "didact": 4, "ditch": 2, "divis": 4, "do": [2, 4, 5], "doesn": 2, "drawback": 2, "drop": 0, "drop_on_sav": 5, "dur_audio": 4, "dur_spoken": 4, "durat": 4, "dure": 0, "e": 2, "each": [2, 4, 6], "earlier": 4, "easi": 4, "eat": 2, "effici": 2, "either": 4, "elderberri": 4, "elif": [2, 4, 6], "els": 6, "end": 4, "energi": 4, "entri": 4, "especi": 2, "even": 2, "everyth": 6, "experiment": 0, "explain": 6, "extern": 3, "extract": [0, 3], "extract_aggreg": 5, "extract_to_csv": [4, 5], "extract_to_df": [4, 5], "extract_to_dict": [4, 5], "extract_to_hdf5": [2, 5], "extract_to_json": 5, "extract_to_pickl": [2, 4, 5], "extract_to_pickle_fil": [2, 5], "extraction_ord": [2, 5], "extractionpipelin": 5, "extractor": [2, 4], "f": 5, "fals": 5, "father": 4, "feat": [4, 5], "feat_a": 2, "feat_b": 2, "feat_df": 4, "feat_dict": 4, "feat_nam": 5, "featur": [0, 2, 3, 5], "feel": 4, "file": [2, 4, 5, 6], "fill": 2, "finish": 4, "first": [2, 4, 6], "flac": 6, "flatten": [0, 5], "flatten_dict": 5, "flatten_featur": 5, "flatten_tupl": 5, "float": 4, "flush": 2, "folder": 2, "follow": [2, 4, 6], "format": [3, 5], "from": [2, 3, 4, 5, 6], "function": [4, 5], "functionwrapperprocessor": 5, "futur": 4, "g": 2, "get_data": [4, 5], "get_progress_iter": 5, "giant": 4, "given": 4, "glad": 4, "goal": 6, "goe": 0, "got": 4, "guid": 3, "h5py": 5, "ha": [2, 4, 6], "had": [2, 4], "hamster": 4, "happi": 4, "have": [2, 4, 5, 6], "hdf": 2, "hdf5": 2, "here": 4, "hierarchi": 6, "hint": 0, "how": [1, 3, 4], "hparam": 5, "i": [2, 4, 5, 6], "id": [4, 6], "identifi": [4, 6], "imag": 2, "img": 2, "img_path": 2, "impact": 2, "implement": [2, 4], "import": [2, 4, 6], "independ": 5, "index": [2, 5], "inherit": 4, "init": 6, "input": [2, 4, 5], "inspir": 6, "instanc": [2, 4], "int": [4, 5], "interest": 4, "interfac": [3, 6], "intermedi": 2, "intern": 3, "interv": 4, "io": [2, 4], "iter": [4, 5], "its": [5, 6], "job": 5, "jpeg": 2, "jsonstorag": 5, "just": [4, 5], "keep": 2, "know": 6, "kwarg": 5, "lambda": 4, "larg": [3, 6], "last": 2, "lazili": 4, "leaner": 2, "leap": 4, "learn": 1, "len": 4, "length": 4, "let": [4, 6], "librosa": 6, "light": 6, "like": [4, 6], "line": 3, "list": [2, 4, 5, 6], "liter": 5, "ll": [1, 4], "load": [4, 6], "log": 2, "long": [2, 4], "m": 4, "made": 2, "magic": [4, 6], "mainli": 5, "man": 4, "mani": [2, 4], "mankind": 4, "mean": 2, "memori": [2, 4], "messier": 2, "method": [2, 4, 5, 6], "might": 2, "migrat": 0, "miscellan": 2, "mode": 2, "more": 4, "mother": 4, "much": 2, "must": [4, 6], "my_dataset": 2, "mydataset": 4, "mylazysampl": 2, "myriad": 2, "mysampl": 4, "name": 4, "nb_noun": 4, "need": [2, 4], "nest": 0, "new": 4, "no_cach": [2, 5], "none": 5, "note": 4, "notic": 4, "notimplementederror": 2, "noun": 4, "nouns_count": 4, "nouns_per_second": 4, "now": 4, "number": [4, 6], "onc": [2, 4], "one": [2, 4, 5, 6], "onli": [2, 4], "open": [4, 6], "option": 0, "orient": 2, "other": 5, "otherwis": 2, "our": [4, 6], "output_fil": 5, "output_fold": 5, "overload": 5, "overridden": 5, "overriden": [4, 6], "own": 4, "panda": 4, "param": [4, 5], "part": 4, "partofspeech": 4, "pass": 5, "path": [2, 4, 5, 6], "pckl": [2, 4], "pd": 5, "per": [2, 4, 6], "perform": 2, "pick": 3, "pickl": [2, 4], "picklestorag": 5, "pillow": 2, "pip": 3, "pipelin": 3, "plan": 2, "plu": 2, "point": 4, "post_init": 5, "practic": 4, "prevent": 2, "previou": 2, "probabl": 2, "proce": [2, 4], "process": [2, 4, 5], "processor": [2, 3, 4], "processorbas": 5, "produc": 2, "proper": 5, "properli": 4, "properti": [4, 5, 6], "protocol": 5, "provid": [4, 6], "pure": 4, "pypi": 3, "python": 0, "pytorch": 6, "queri": 5, "quickstart": 3, "rais": 2, "ram": 2, "rate": [4, 6], "ratio": 4, "re": [2, 4], "read": [2, 4, 6], "read_jpeg": 2, "read_wav": 2, "reason": 4, "record": [2, 4], "refer": [2, 3], "regist": 4, "relev": 2, "request": 4, "requir": [2, 4], "return": [0, 2, 4, 5, 6], "right": [3, 4, 5], "run": [2, 3], "sai": [4, 6], "sake": 4, "same": 2, "sampl": [0, 4, 5], "sample1": 4, "sample2": 4, "sample3": 4, "sample4": 4, "sample_1": 6, "sample_2": 6, "sample_3": 6, "sample_data": 4, "sample_i": 2, "sample_r": 6, "sample_x": 2, "samplefeatureprocessor": 5, "sampleinputprocessor": 5, "sampleprocessor": [4, 5], "save": 3, "scipi": [2, 4], "second": 4, "section": [1, 2], "self": [2, 4, 6], "separ": 5, "set": [2, 3, 5], "set_extraction_polici": 5, "set_hparam": 5, "sever": 2, "share": 3, "should": [2, 4, 5, 6], "show_progress": 5, "side": 2, "simplic": 4, "skip_error": 5, "slight": 2, "small": [2, 4], "smelt": 4, "so": 2, "solut": 2, "some": [2, 4], "someth": 0, "spaci": 4, "speaker": 4, "special": 4, "specif": 2, "speech": 4, "split": 4, "split_text": 4, "spoken": 4, "spoken_dur": 4, "spoken_ratio": 4, "spoken_tim": 4, "start": 4, "static": 5, "stem": 6, "step": [2, 4], "stick": 2, "still": 4, "storag": 3, "storage_index": 5, "store": [0, 2, 5, 6], "store_feat": 5, "store_sampl": 5, "str": [2, 4, 5, 6], "strang": 4, "strategi": 2, "stream": 5, "string": 6, "sum": 4, "sunshin": 4, "support": 0, "systemat": 2, "t": [2, 4, 5], "tag": 4, "take": [2, 5], "talk": 4, "task": 2, "taunt": 4, "tell": 4, "temporari": 5, "term": 2, "text": 4, "textio": 5, "thei": 6, "them": 2, "therefor": 4, "thi": [1, 2, 4, 5], "thing": [4, 6], "through": [4, 6], "time": 4, "todo": [2, 6], "too": 4, "total": 4, "trancript_fil": 6, "trancript_path": 6, "transcript": [4, 6], "transcript_1": 6, "transcript_2": 6, "transcript_3": 6, "transcript_path": 6, "transcriptedaudiosampl": 6, "trick": 2, "true": [2, 5], "tupl": [4, 5, 6], "tutori": 2, "two": 6, "txt": 6, "type": [0, 4, 6], "understand": 6, "uniqu": [4, 6], "unknown": 4, "up": [3, 6], "us": [0, 1, 3, 4, 5], "usag": 2, "useless": 4, "user": 3, "usual": 5, "valu": [0, 4, 5], "ve": 4, "verb": 4, "verbos": 2, "verbs_count": 4, "veri": [2, 6], "wa": 4, "wai": 2, "want": 6, "wav": [2, 4], "wave": 4, "wavefil": 2, "we": [4, 6], "what": [2, 4], "whatev": 6, "when": [0, 2, 4, 5], "which": [4, 6], "while": 2, "whose": 4, "won": 4, "word": 4, "word_count": 4, "word_list": 4, "word_typ": 4, "work": 2, "write": 5, "wrong": 0, "yaml": 4, "yet": 4, "yield": 4, "yml_file": 4, "you": [1, 2, 3, 4, 6], "your": [3, 4]}, "titles": ["Changelog", "Command Line Interface", "How-To", "Welcome to adfluo\u2019s documentation!", "Quickstart", "Reference", "User Guide"], "titleterms": {"": [2, 3], "0": 0, "06": 0, "15": 0, "16": 0, "2024": 0, "3": 0, "4": 0, "7": 0, "To": 2, "adfluo": 3, "advanc": 6, "ani": 2, "api": 5, "architectur": 6, "basic": 6, "batch": 6, "cach": 2, "changelog": 0, "command": 1, "content": 3, "data": [2, 5], "dataset": [2, 4, 6], "datasetload": 6, "deal": 2, "disabl": 2, "document": 3, "element": 5, "enabl": 2, "extern": 5, "extract": [2, 4, 5, 6], "extractor": 5, "featur": 4, "form": 2, "format": 2, "function": 6, "graph": 5, "guid": 6, "how": 2, "implement": 6, "index": 3, "input": 6, "instal": 3, "interfac": 1, "intern": 5, "lambda": 6, "larg": 2, "lazi": 2, "line": 1, "load": [2, 5], "make": 2, "option": 6, "order": 2, "output": [2, 6], "own": 6, "pick": 2, "pipelin": [2, 4, 5, 6], "possibl": 2, "primit": 6, "processor": [5, 6], "python": 6, "quickstart": 4, "refer": 5, "right": 2, "run": 4, "sampl": [2, 6], "save": 4, "set": 4, "share": 2, "storag": [2, 5, 6], "stream": 2, "up": 4, "us": [2, 6], "user": 6, "welcom": 3, "wise": 2, "your": [2, 6]}})